Ponder.registry((event) => {
    event.create(["charcoal_pit:main_bloomery", "charcoal_pit:sandy_tuyere", "charcoal_pit:sandy_brick", "charcoal_pit:bellows", "charcoal_pit:mechanical_bellows"])
        .tag("charcoal_pit:ponder")
        // bloomery building
        .scene("assembly", "1", "kubejs:bloomery", (scene) => {
            scene.showBasePlate()
            scene.idle(20)

            scene.world.showSection([4, 1, 0, 0, 1, 4], Direction.DOWN)
            scene.addKeyframe()
            scene.idle(40)
            scene.world.showSection([4, 2, 0, 0, 2, 4], Direction.DOWN)
            scene.addKeyframe()
            scene.idle(40)

            // Bloomery info scene
            scene.addKeyframe()
            scene.overlay.showText(50)
                .text("A single Bellow is required for the Bloomery to work")
                .pointAt([3, 2, 1])
            scene.idle(60)
            scene.overlay.showOutline("green", {}, [3, 2, 1], 130)
            scene.overlay.showText(50)
                .text("Make sure to check it's vent orientation")
                .pointAt([3, 2, 1])
            scene.idle(60)
            scene.overlay.showText(50)
                .colored(PonderPalette.RED)
                .text("If the vent doesnt face the Tuyere, the Bellow will not work")
                .pointAt([3, 2, 1])
            scene.idle(70)

            scene.addKeyframe()
            scene.overlay.showText(50)
                .text("R-Click to push air in using the Bellow")
                .pointAt([3, 2, 1])
            scene.idle(30)
            scene.showControls(20, [3, 2, 1], "right")
            scene.world.modifyBlocks([3, 2, 1], (state) => state.with("push", "true"), false)
            scene.idle(20)
            scene.world.modifyBlocks([3, 2, 1], (state) => state.with("push", "false"), false)
            scene.idle(20)

            // Bloomery extraupgrade scene
            scene.addKeyframe()
            // let pos2 = util.grid().at(1, 2, 1)
            scene.overlay.showOutline("green", {}, [1, 2, 1], 50)
            scene.overlay.showText(50)
                .colored(PonderPalette.GREEN)
                .text("Another Tuyere can be added on this side, just make sure to check it's vent direction")
                .pointAt([1, 2, 1])
            scene.idle(30)
            scene.world.setBlocks([1, 2, 1], "charcoal_pit:bellows", true)
            scene.world.modifyBlocks([1, 2, 1], (state) => state.with("Direction", Direction.EAST), false)
            scene.idle(30)

            scene.world.showSection([2, 3, 2], Direction.DOWN)
            scene.overlay.showOutline("green", {}, [1, 3, 1, 3, 3, 3], 40)
            scene.overlay.showText(50)
                .colored(PonderPalette.GREEN)
                .text("Another layer can be placed for 2x processing. You cannot stack another layer after this one")
                .pointAt([2, 3, 2])
            scene.idle(40)
        })

        // bloomery usage
        .scene("usage", "Using the bloomery", "kubejs:bloomery", (scene) => {
            scene.showBasePlate()
            scene.world.showSection([4, 1, 0, 0, 2, 4], Direction.DOWN)
            scene.idle(20)

            //
            scene.overlay.showText(50)
                .colored(PonderPalette.GREEN)
                .text("To start processing, use Shift + R-Click with the first ore in hand (not blocks)")
                .pointAt([2, 3, 2])
            scene.idle(50)
            scene.showControls(20, [2, 3, 2], "down")
                .withItem("minecraft:raw_iron")
            scene.idle(20)

            scene.addKeyframe()
            scene.overlay.showText(40)
                .colored(PonderPalette.GREEN)
                .text("After the initial placement, R-Click the pile with the ore and charcoal")
                .pointAt([2, 3, 2])
            scene.idle(50)

            scene.showControls(40, [2, 3, 2], "right")
                .withItem("minecraft:charcoal")

            let theSection = scene.world.showIndependentSectionImmediately([2, 6, 2])
            scene.world.moveSection(theSection, [0, -4, 0], 0)
            scene.idle(50)

            scene.addKeyframe()
            scene.overlay.showText(40)
                .colored(PonderPalette.GREEN)
                .text("After filling it up, start it by using a firestarter")
                .pointAt([2, 3, 2])
            scene.showControls(40, [2, 3.5, 2], "down")
                .withItem("charcoal_pit:fire_starter")
            scene.idle(50)

            scene.world.modifyBlocks([2, 6, 2], (state) => state.with("stage", "9"), false)
            scene.world.setBlocks([2, 3, 2], "minecraft:fire")
            scene.world.showIndependentSectionImmediately([2, 3, 2])
            scene.world.modifyBlocks([2, 1, 2], (state) => state.with("stage", "1"), false)

            let swapBlockFromTo = scene.world.showIndependentSectionImmediately([1, 8, 1, 3, 9, 3])
            scene.world.moveSection(scene.world.showIndependentSectionImmediately(swapBlockFromTo), [0, -7, 0], 0)
            scene.idle(50)

            scene.showControls(40, [3, 3, 1], "down")
                .rightClick()
            scene.world.modifyBlocks([3, 2, 1], (state) => state.with("push", "true"), false)
            scene.world.modifyBlocks([2, 1, 2], (state) => state.with("stage", "2"), false)
            scene.idle(20)
            scene.world.modifyBlocks([3, 2, 1], (state) => state.with("push", "false"), false)

            scene.overlay.showText(40)
                .colored(PonderPalette.GREEN)
                .text("Once it's done burning, you can mine it up and collect the iron")
                .pointAt([2, 2, 2])
            scene.idle(40)
        })
})